#include<stdio.h>
#include<stdlib.h>
#include<GL/glut.h>
#include<math.h>
#define PI 3.1415926535898
#define janela_altura 400
#define janela_largura 600

GLfloat circ_pnt = 40;
GLfloat ang, raioX = 65, raioY = 80;

void display(void);
void tela(GLsizei w, GLsizei h);
void lacoDireita();
void lacoEsquerdo();
void topoOvo();

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(janela_largura, janela_altura);
	glutInitWindowPosition(100, 100);

	glutCreateWindow("Bruno Pergher - Ovos de Pascoa");

	glutReshapeFunc(tela);
	glutDisplayFunc(display);
	glutMainLoop();

	return(0);
}

void desenhaOvo1() {
	glColor3ub(0, 255, 127);
	glBegin(GL_POLYGON); //ovo2

	for (int i = 0; i < circ_pnt; i++)
	{
		if (i >= circ_pnt / 10) {
			glColor3ub(34, 139, 34);
		}
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * raioX, sin(ang) * raioY);
	}

	glEnd();
	glPopMatrix();
	glPushMatrix();

	glTranslatef(-120, 85, 0);
	glColor3ub(0, 255, 255);
	lacoDireita();
	lacoEsquerdo();
	topoOvo();

	for (int i = 0; i < circ_pnt; i++)
	{
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * 15, sin(ang) * 13);
	}

	glEnd();
	glPopMatrix();
	glPushMatrix();
}

void desenhaOvo2() {
	glColor3ub(255, 165, 0);
	glBegin(GL_POLYGON); //ovo2

	for (int i = 0; i < circ_pnt; i++)
	{
		if (i >= circ_pnt / 10) {
			glColor3ub(34, 139, 34);
		}
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * raioX, sin(ang) * raioY);
	}

	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(0, 0, 0);
	glColor3ub(139, 69, 19);
}

void ovoEsquerda() {
	glColor3ub(255, 165, 0);
	glBegin(GL_POLYGON); //ovo1

	for (int i = 0; i < circ_pnt; i++)
	{
		if (i >= circ_pnt / 10) {
			glColor3ub(255, 69, 0);
		}
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * raioX, sin(ang) * raioY);
	}

	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-125, 0, 0);
}

void desenhar()
{
	ovoEsquerda();
	desenhaOvo1();

	glTranslatef(-10, 85, 0);
	glColor3ub(0, 255, 255);
	glBegin(GL_POLYGON);

	for (int i = 0; i < circ_pnt; i++)
	{
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * 15, sin(ang) * 13);
	}

	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(10, 85, 0);
	glColor3ub(0, 255, 255); // laÃ§o
	glBegin(GL_POLYGON);

	for (int i = 0; i < circ_pnt; i++)
	{
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * 15, sin(ang) * 13);
	}

	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(5, -40, 0);
	glRotated(10, 0, 0, 1);
	glLineWidth(3.0f);
}

void display()
{
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	glClearColor(0, 0, 0, 0);
	glClear(GL_COLOR_BUFFER_BIT);
	glTranslatef(janela_largura / 2, janela_altura / 2, 0);
	glViewport(0, 0, janela_largura, janela_altura);
	desenhar();
	glFlush();
}

void tela(GLsizei w, GLsizei h)
{
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0, janela_largura, 0, janela_altura);
	glMatrixMode(GL_MODELVIEW);
}

void topoOvo() {
	glColor3f(0, 255, 127);
	glColor3ub(0, 255, 127);// cor
	glBegin(GL_TRIANGLES);
	glVertex2f(-40, 90);
	glVertex2f(40, 90);
	glVertex2f(-10, -15);
	glEnd();
}

void lacoDireita() {
	glLineWidth(8);
	glPushMatrix();
	glTranslatef(30, 5, 0);
	//glTranslatef(-140, 85, 0);
	glRotated(10, 0, 0, 1);
	GLfloat circ_pnt = 300;
	GLfloat ang, raioX = 35.0f, raioY = 10.0f;

	glColor3ub(155, 128, 79);  // cor
	glBegin(GL_LINE_LOOP);
	for (int i = 0; i < circ_pnt; i++)
	{
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * raioX, sin(ang) * raioY);
	}
	glEnd();
	glPopMatrix();
}

void lacoEsquerdo() {
	glLineWidth(8);
	glPushMatrix();
	glRotated(-10, 0, 0, 1);
	glTranslatef(-45, -5, 0);
	GLfloat circ_pnt = 300;
	GLfloat ang, raioX = 35.0f, raioY = 10.0f;

	glColor3ub(155, 128, 79);  // cor
	glBegin(GL_LINE_LOOP);
	for (int i = 0; i < circ_pnt; i++)
	{
		ang = (2 * PI * i) / circ_pnt;
		glVertex2f(cos(ang) * raioX, sin(ang) * raioY);
	}
	glEnd();
	glPopMatrix();
}